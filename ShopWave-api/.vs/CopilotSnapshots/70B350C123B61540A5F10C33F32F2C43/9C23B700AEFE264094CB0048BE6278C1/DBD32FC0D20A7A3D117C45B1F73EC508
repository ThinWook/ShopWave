using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using ShopWave.Models;
using ShopWave.Models.DTOs;

namespace ShopWave.Repositories
{
    public interface IRecommendationRepository
    {
        // POC: load precomputed JSON for item-similar and popularity
        Task<bool> IsReadyAsync(CancellationToken ct = default);
        Task<List<string>> GetPopularAsync(int k, CancellationToken ct = default);
        Task<List<(Guid id, double score)>> GetItemSimilarAsync(Guid productId, int k, CancellationToken ct = default);
        Task<List<(Guid id, double score)>> GetPersonalizedAsync(Guid userId, int k, CancellationToken ct = default);

        // Fetch product metadata (title, price, imageUrl) in batch to enrich recommendations
        Task<Dictionary<Guid, (string title, decimal price, string? imageUrl)>> GetProductMetadataAsync(IEnumerable<Guid> ids, CancellationToken ct = default);
    }
}